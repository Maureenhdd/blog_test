[{"/Users/laibulle/Sources/blog_test/src/index.js":"1","/Users/laibulle/Sources/blog_test/src/reportWebVitals.js":"2","/Users/laibulle/Sources/blog_test/src/App.js":"3","/Users/laibulle/Sources/blog_test/src/components/SinglePost.js":"4","/Users/laibulle/Sources/blog_test/src/components/Posts.js":"5","/Users/laibulle/Sources/blog_test/src/client.js":"6","/Users/laibulle/Sources/blog_test/src/components/Header.js":"7","/Users/laibulle/Sources/blog_test/src/components/Footer.js":"8"},{"size":500,"mtime":1611153143862,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611153143862,"results":"11","hashOfConfig":"10"},{"size":484,"mtime":1611153143860,"results":"12","hashOfConfig":"10"},{"size":2108,"mtime":1611155596268,"results":"13","hashOfConfig":"10"},{"size":2830,"mtime":1611155573194,"results":"14","hashOfConfig":"10"},{"size":548,"mtime":1611154643545,"results":"15","hashOfConfig":"10"},{"size":1951,"mtime":1611155810390,"results":"16","hashOfConfig":"10"},{"size":1241,"mtime":1611153143861,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1bpk83w",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/laibulle/Sources/blog_test/src/index.js",[],["37","38"],"/Users/laibulle/Sources/blog_test/src/reportWebVitals.js",[],"/Users/laibulle/Sources/blog_test/src/App.js",[],"/Users/laibulle/Sources/blog_test/src/components/SinglePost.js",["39","40"],"import React from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport { getSinglePost } from '../client'\nimport Header from './Header'\nimport Footer from './Footer'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleLeft, faCalendarDay } from '@fortawesome/free-solid-svg-icons'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { readableDate } from './Posts'\n\nconst useSinglePost = (slug) => {\n  const promise = getSinglePost(slug)\n  const [post, setPost] = useState(null)\n  const [isLoading, setLoading] = useState(true)\n\n  useEffect(() => {\n    promise.then(result => {\n      setPost(result[0].fields)\n      setLoading(false)\n    })\n  }, [])\n\n  return [post, isLoading]\n}\n\n\nexport default () => {\n  const { id } = useParams()\n  const [post, isLoading] = useSinglePost(id)\n\n  const renderPost = () => {\n\n    if (isLoading) return ''\n\n    return (\n\n      <>\n        <div className=\"single_post_content\">\n          <h2 className=\"single_post_title\">{post.title}</h2>\n          <div className=\"single_post_image\">\n            <img className=\"single_post_image_content\" src={post.picture.fields.file.url} alt={post.picture.fields.title} />\n          </div>\n          <div className=\"single_post_date_cate\">\n            <p className=\"post_content_category\">{post.category}</p>\n            <div className=\"date\">\n              <FontAwesomeIcon className=\"date_i\" icon={faCalendarDay} />\n              <p className=\"single_post_date\">{readableDate(post.publishedAt)}</p>\n            </div>\n          </div>\n          <div className=\"single_post_body\" dangerouslySetInnerHTML={{ __html: documentToHtmlString(post.body) }}></div>\n        </div>\n      </>\n\n    )\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"App\">\n        {renderPost()}\n        <div className=\"post_back\">\n          <Link className=\"post_back_content\" to=\"/\">\n            <FontAwesomeIcon className=\"post_back_i\" icon={faAngleLeft}/>\n          </Link>\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}","/Users/laibulle/Sources/blog_test/src/components/Posts.js",["41","42","43"],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Header from './Header'\nimport { useClient } from '../client'\nimport Footer from './Footer'\n\n// Don't repeat yourself, if you need to use a value more than once, store it somewhere\nconst ALL_CATEGORY = 'all'\n\n// Don't repeat yourself, if you need to use a piece of code more than opnce, create a function\nexport const readableDate = dateString => new Date(dateString).toLocaleDateString(\"fr-FR\")\n\n// Functionnal components are the way to go in new react projects\nexport default () => {\n  const [articles, setArticles] = useState([])\n  const [category, setCategory] = useState(ALL_CATEGORY)\n  const [client] = useClient()\n\n  const filter = (categ) => setCategory(categ)\n\n  useEffect(() => {\n    const proc = async () => setArticles((await client.getEntries()).items)\n\n    proc()\n  },[])\n\n  const getCategory = () => {\n    // Map is use to transform an array into another one, you don't need to mutate a third array as you would do with foreach\n    const cate = articles.map(post => post.fields.category)\n\n    // delete doublon from the array \n    // 👍 nice trick, didn't know it\n    const categories = [...(new Set(cate))]\n\n    // Don't use html attributes it is the way angular and vue work but not react\n    return categories.map(categ => {\n      return <button key={categ} onClick={ () => filter(categ)} className={`category_${categ} banner_categories_content`} >{categ}</button>\n    })\n  }\n\n  // renderPosts is a better name than getPosts in this case\n  const renderPosts = () => {\n    return articles.map(post => {\n      if (post.fields.category === category || category === ALL_CATEGORY) {\n        return (\n          <Link className=\"posts_content_link slide-in-bottom\" key={post.fields.slug} to={post.fields.slug}>\n            <div className='post'>\n              <div className=\"post_content_overflow\">\n                <img className=\"post_content_image\" src={post.fields.picture.fields.file.url} alt={post.fields.picture.fields.title} />\n              </div>\n              <p className=\"post_content_category\">{post.fields.category}</p>\n              <h3 className='post_content_title'>{post.fields.title}</h3>\n              <p>{readableDate(post.fields.publishedAt)}</p>\n            </div>\n          </Link>\n\n        )\n      }\n    })\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"App\">\n        <div className=\"banner\">\n          <h1 className=\"banner_title\">Tous les articles</h1>\n          <div className=\"banner_categories\">{getCategory()}\n            <button onClick={() => filter(ALL_CATEGORY)}  className={`category_all banner_categories_content`}>All</button>\n          </div>\n        </div>\n        <div className=\"posts_content\">{renderPosts()}</div>\n      </div>\n      <Footer />\n    </>\n  );\n\n}\n","/Users/laibulle/Sources/blog_test/src/client.js",[],"/Users/laibulle/Sources/blog_test/src/components/Header.js",["44","45"],"/Users/laibulle/Sources/blog_test/src/components/Footer.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":22,"column":6,"nodeType":"52","endLine":22,"endColumn":8,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":28,"column":1,"nodeType":"56","endLine":72,"endColumn":2},{"ruleId":"54","severity":1,"message":"55","line":14,"column":1,"nodeType":"56","endLine":78,"endColumn":2},{"ruleId":"50","severity":1,"message":"57","line":25,"column":5,"nodeType":"52","endLine":25,"endColumn":7,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":43,"column":30,"nodeType":"61","messageId":"62","endLine":43,"endColumn":32},{"ruleId":"63","severity":1,"message":"64","line":25,"column":25,"nodeType":"65","endLine":25,"endColumn":72},{"ruleId":"66","severity":1,"message":"67","line":27,"column":43,"nodeType":"68","messageId":"69","endLine":27,"endColumn":44},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'promise'. Either include it or remove the dependency array.","ArrayExpression",["72"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'client'. Either include it or remove the dependency array.",["73"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [promise]",{"range":"78","text":"79"},"Update the dependencies array to be: [client]",{"range":"80","text":"81"},[763,765],"[promise]",[879,881],"[client]"]